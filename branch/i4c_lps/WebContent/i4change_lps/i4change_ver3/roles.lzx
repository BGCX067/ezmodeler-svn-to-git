<library>


<class name="roles" extends="view">

<view name="role" x="${parent.x}" y="${parent.y}"  width="${parent.width}" height="${parent.height}"
onmousedown="dragorresize_start('drag');"
onmouseup="dragorresize_stop('drag');" bgcolor="0x6688EE">

<inputtext name="myText" x="${parent.width/10}" y="${parent.height/50}"
 width="${parent.width/2}" height="50" multiline="true">Role</inputtext>

<method name="dragorresize_start" args="dowhat">

if (dowhat == "resize") { 
    Debug.write("before apply: x1=" + getAttribute('x')+ " y1=" + getAttribute('y'));
    this.rs.apply();
    this.resizer.ds.apply();
    
}
if (dowhat == "drag") { 
    this.ds.apply();
 }

</method>

<method name="dragorresize_stop" args="dowhat">
if (dowhat == "resize") { 
     this.resizer.setX(getAttribute("width")-15);
    this.resizer.setY(getAttribute("height")-15);
    this.rs.remove(); 
    this.resizer.ds.remove();

}
if (dowhat == "drag") { 
    this.resizer.setX(getAttribute("width")-15);
    this.resizer.setY(getAttribute("height")-15);
    this.ds.remove();
    }

</method>
	
	<resizestate name="rs" >
	</resizestate>


	<dragstate name="ds" >
		<method event="onapply">
		</method>
	</dragstate>
	
	<view name="resizer" x="${parent.getAttribute('width')-15}" y="${parent.getAttribute('height')-15}"
         onmousedown="parent.dragorresize_start('resize');"
		onmouseup="parent.dragorresize_stop('resize');" opacity="1" resource="corner.png">
	<resizestate name="rs" />
	<dragstate name="ds" />


      </view>

</view>
 
</class>

</library>
